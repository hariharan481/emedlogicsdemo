{"ast":null,"code":"var _jsxFileName = \"E:\\\\clarits1\\\\emedlogicsdemo\\\\src\\\\components\\\\Codedet.js\",\n  _s = $RefreshSig$();\nimport { Close } from \"@mui/icons-material\";\nimport { Button } from \"@mui/material\";\nimport \"../App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Codenotes = () => {\n  _s();\n  const [result, setResult] = useState(null);\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        if (global.values && global.values.code) {\n          const response = await fetch(`/notes/${global.values.code}`);\n          if (response.ok) {\n            const data = await response.json();\n            setResult(data);\n          }\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchNotes();\n  }, [global.values]);\n  if (!result) {\n    return null; // or display a loading state\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n_s(Codenotes, \"otsdU8867Nll1OjDzAJiWNisW5I=\");\n_c = Codenotes;\nexport default Codenotes;\nvar _c;\n$RefreshReg$(_c, \"Codenotes\");","map":{"version":3,"names":["Close","Button","React","useEffect","useState","jsxDEV","_jsxDEV","Codenotes","_s","result","setResult","fetchNotes","global","values","code","response","fetch","ok","data","json","error","console","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/clarits1/emedlogicsdemo/src/components/Codedet.js"],"sourcesContent":["import { Close } from \"@mui/icons-material\";\r\nimport { Button } from \"@mui/material\";\r\nimport \"../App.css\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Codenotes = () => {\r\n  const [result, setResult] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchNotes = async () => {\r\n      try {\r\n        if (global.values && global.values.code) {\r\n          const response = await fetch(`/notes/${global.values.code}`);\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            setResult(data);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchNotes();\r\n  }, [global.values]);\r\n\r\n  if (!result) {\r\n    return null; // or display a loading state\r\n  }\r\n\r\n  return <div>{/* Your code to render and display the 'result' */}</div>;\r\n};\r\n\r\nexport default Codenotes;\r\n"],"mappings":";;AAAA,SAASA,KAAK,QAAQ,qBAAqB;AAC3C,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAO,YAAY;AAEnB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,IAAIC,MAAM,CAACC,MAAM,IAAID,MAAM,CAACC,MAAM,CAACC,IAAI,EAAE;UACvC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,UAASJ,MAAM,CAACC,MAAM,CAACC,IAAK,EAAC,CAAC;UAC5D,IAAIC,QAAQ,CAACE,EAAE,EAAE;YACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;YAClCT,SAAS,CAACQ,IAAI,CAAC;UACjB;QACF;MACF,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDT,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACC,MAAM,CAACC,MAAM,CAAC,CAAC;EAEnB,IAAI,CAACJ,MAAM,EAAE;IACX,OAAO,IAAI,CAAC,CAAC;EACf;;EAEA,oBAAOH,OAAA;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAA8D,CAAC;AACxE,CAAC;AAACjB,EAAA,CA1BID,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AA4Bf,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}