{"ast":null,"code":"var _jsxFileName = \"E:\\\\clarits1\\\\emedlogicsdemo\\\\src\\\\components\\\\Search.js\",\n  _s = $RefreshSig$();\nimport { Autocomplete, Box, IconButton, Stack, TextField } from \"@mui/material\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport \"../App.css\";\nimport { Main } from \"./Main\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [results, setResults] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [selectedResult, setSelectedResult] = useState(null);\n  const [searchWord, setSearchWord] = useState(\"\");\n  const [isValueSelected, setIsValueSelected] = useState(false);\n  const handleSearchChange = e => {\n    setSearchWord(e.target.value);\n  };\n  useEffect(() => {\n    const fetchResults = async () => {\n      try {\n        const response = await fetch(`/codes/${searchWord}/matches`);\n        if (response.ok) {\n          const data = await response.json();\n          setResults(data);\n        } else {\n          console.error(\"Failed to fetch data\");\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n    fetchResults();\n  }, [searchWord]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: \"80px\",\n        position: \"static\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        sx: {\n          margin: \"auto\",\n          color: \"black\",\n          mt: \"20px\"\n        },\n        direction: \"row\",\n        gap: 5,\n        children: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            id: \"users\",\n            value: selectedResult,\n            onChange: (event, newValue) => {\n              setSelectedResult(newValue);\n              setIsValueSelected(true);\n            },\n            getOptionLabel: result => `${result.id} ${result.description}`,\n            options: results,\n            sx: {\n              width: \"1450px\",\n              backgroundColor: \"white\",\n              mt: \"14px\",\n              ml: \"130px\",\n              display: \"inline-block\",\n              \"& input\": {\n                height: \"5px\",\n                bgcolor: \"background.paper\",\n                color: theme => theme.palette.getContrastText(theme.palette.background.paper)\n              }\n            },\n            isOptionEqualToValue: (option, value) => (option === null || option === void 0 ? void 0 : option.description) === (value === null || value === void 0 ? void 0 : value.description),\n            noOptionsText: \"PLEASE ENTER VALID CODES\",\n            open: open,\n            onInputChange: (_, value) => {\n              if (value.length === 0) {\n                if (open) setOpen(false);\n              } else {\n                if (!open) setOpen(true);\n              }\n            },\n            onClose: () => setOpen(false),\n            popupIcon: /*#__PURE__*/_jsxDEV(SearchIcon, {\n              sx: {\n                \"&:hover\": {\n                  background: \"none\"\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this),\n            renderOption: (props, result) => /*#__PURE__*/_createElement(Box, {\n              ...props,\n              key: result.id,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }\n            }, result.id, \" \", result.description),\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n              ...params,\n              onChange: handleSearchChange,\n              placeholder: \"Search for code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      isValueSelected: isValueSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Search, \"pVEYQmipnG7hyl8RaXZ9lCvMQYI=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["Autocomplete","Box","IconButton","Stack","TextField","React","Fragment","useEffect","useState","SearchIcon","Main","jsxDEV","_jsxDEV","createElement","_createElement","_Fragment","Search","_s","results","setResults","open","setOpen","selectedResult","setSelectedResult","searchWord","setSearchWord","isValueSelected","setIsValueSelected","handleSearchChange","e","target","value","fetchResults","response","fetch","ok","data","json","console","error","children","sx","height","position","margin","color","mt","direction","gap","id","onChange","event","newValue","getOptionLabel","result","description","options","width","backgroundColor","ml","display","bgcolor","theme","palette","getContrastText","background","paper","isOptionEqualToValue","option","noOptionsText","onInputChange","_","length","onClose","popupIcon","fileName","_jsxFileName","lineNumber","columnNumber","renderOption","props","key","__self","__source","renderInput","params","placeholder","_c","$RefreshReg$"],"sources":["E:/clarits1/emedlogicsdemo/src/components/Search.js"],"sourcesContent":["import { Autocomplete, Box, IconButton, Stack, TextField } from \"@mui/material\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport \"../App.css\";\r\nimport { Main } from \"./Main\";\r\n\r\nconst Search = () => {\r\n  const [results, setResults] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedResult, setSelectedResult] = useState(null);\r\n  const [searchWord, setSearchWord] = useState(\"\");\r\n  const [isValueSelected, setIsValueSelected] = useState(false);\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchWord(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchResults = async () => {\r\n      try {\r\n        const response = await fetch(`/codes/${searchWord}/matches`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setResults(data);\r\n        } else {\r\n          console.error(\"Failed to fetch data\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    };\r\n    fetchResults();\r\n  }, [searchWord]);\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ height: \"80px\", position: \"static\" }}>\r\n        <Stack\r\n          sx={{ margin: \"auto\", color: \"black\", mt: \"20px\" }}\r\n          direction={\"row\"}\r\n          gap={5}\r\n        >\r\n          <Fragment>\r\n            <Autocomplete\r\n              id=\"users\"\r\n              value={selectedResult}\r\n              onChange={(event, newValue) => {\r\n                setSelectedResult(newValue);\r\n                setIsValueSelected(true);\r\n              }}\r\n              getOptionLabel={(result) => `${result.id} ${result.description}`}\r\n              options={results}\r\n              sx={{\r\n                width: \"1450px\",\r\n                backgroundColor: \"white\",\r\n                mt: \"14px\",\r\n                ml: \"130px\",\r\n                display: \"inline-block\",\r\n                \"& input\": {\r\n                  height: \"5px\",\r\n                  bgcolor: \"background.paper\",\r\n                  color: (theme) =>\r\n                    theme.palette.getContrastText(\r\n                      theme.palette.background.paper\r\n                    ),\r\n                },\r\n              }}\r\n              isOptionEqualToValue={(option, value) =>\r\n                option?.description === value?.description\r\n              }\r\n              noOptionsText={\"PLEASE ENTER VALID CODES\"}\r\n              open={open}\r\n              onInputChange={(_, value) => {\r\n                if (value.length === 0) {\r\n                  if (open) setOpen(false);\r\n                } else {\r\n                  if (!open) setOpen(true);\r\n                }\r\n              }}\r\n              onClose={() => setOpen(false)}\r\n              popupIcon={\r\n                <SearchIcon sx={{ \"&:hover\": { background: \"none\" } }} />\r\n              }\r\n              renderOption={(props, result) => (\r\n                <Box {...props} key={result.id}>\r\n                  {result.id} {result.description}\r\n                </Box>\r\n              )}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  onChange={handleSearchChange}\r\n                  placeholder=\"Search for code\"\r\n                />\r\n              )}\r\n            />\r\n          </Fragment>\r\n        </Stack>\r\n      </Box>\r\n      <Main isValueSelected={isValueSelected} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}