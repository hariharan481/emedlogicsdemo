{"ast":null,"code":"var _jsxFileName = \"E:\\\\clarits1\\\\emedlogicsdemo\\\\src\\\\components\\\\Year.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/Year.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Year = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const options = [{\n    value: \"option1\",\n    label: \"2024\"\n  }, {\n    value: \"option1\",\n    label: \"2023\"\n  }, {\n    value: \"option2\",\n    label: \"2022\"\n  }, {\n    value: \"option3\",\n    label: \"2021\"\n  }, {\n    value: \"option3\",\n    label: \"2020\"\n  }, {\n    value: \"option3\",\n    label: \"2019\"\n  }, {\n    value: \"option3\",\n    label: \"2018\"\n  }, {\n    value: \"option3\",\n    label: \"2017\"\n  }, {\n    value: \"option3\",\n    label: \"2016\"\n  }];\n  const toggleDropdown = () => setIsOpen(!isOpen);\n  const handleOptionClick = option => {\n    setSelectedOption(option);\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dropdown__toggle\",\n        onMouseEnter: () => setIsOpen(true),\n        onClick: toggleDropdown,\n        children: selectedOption ? selectedOption.label : \"Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"dropdown-menu\",\n        children: options.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"dropdown__menu-item\",\n          onClick: () => handleOptionClick(option),\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            children: option.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"dropdown__menu-item-description\",\n            children: option.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)]\n        }, option.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Year, \"BpVbkn/NswzhRYWTNyv0RP2ekPc=\");\n_c = Year;\nvar _c;\n$RefreshReg$(_c, \"Year\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Year","_s","isOpen","setIsOpen","selectedOption","setSelectedOption","options","value","label","toggleDropdown","handleOptionClick","option","children","className","onMouseEnter","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","description","_c","$RefreshReg$"],"sources":["E:/clarits1/emedlogicsdemo/src/components/Year.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/Year.css\";\r\n\r\nexport const Year = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const options = [\r\n    { value: \"option1\", label: \"2024\" },\r\n    { value: \"option1\", label: \"2023\" },\r\n    { value: \"option2\", label: \"2022\" },\r\n    { value: \"option3\", label: \"2021\" },\r\n    { value: \"option3\", label: \"2020\" },\r\n    { value: \"option3\", label: \"2019\" },\r\n    { value: \"option3\", label: \"2018\" },\r\n    { value: \"option3\", label: \"2017\" },\r\n    { value: \"option3\", label: \"2016\" },\r\n  ];\r\n  const toggleDropdown = () => setIsOpen(!isOpen);\r\n  const handleOptionClick = (option) => {\r\n    setSelectedOption(option);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"dropdown\">\r\n        <button\r\n          className=\"dropdown__toggle\"\r\n          onMouseEnter={() => setIsOpen(true)}\r\n          onClick={toggleDropdown}\r\n        >\r\n          {selectedOption ? selectedOption.label : \"Year\"}\r\n        </button>\r\n        {isOpen && (\r\n          <ul className=\"dropdown-menu\">\r\n            {options.map((option) => (\r\n              <li\r\n                key={option.value}\r\n                className=\"dropdown__menu-item\"\r\n                onClick={() => handleOptionClick(option)}\r\n              >\r\n                <a>{option.label}</a>\r\n                <a className=\"dropdown__menu-item-description\">\r\n                  {option.description}\r\n                </a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n      {/*\r\n      <div class=\"dropdown\">\r\n        <button\r\n          className=\"dropdown__toggle\"\r\n          onMouseEnter={() => setIsOpen(true)}\r\n          onClick={toggleDropdown}\r\n        >\r\n          {selectedOption ? selectedOption.label : \"Year\"}\r\n        </button>\r\n        <ul class=\"dropdown-menu\">\r\n          <li>\r\n            <a href=\"#\">action 1</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\">action 2</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\">action 3</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\">action 4</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      */}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}